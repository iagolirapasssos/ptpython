# bot_musica.ptpy

importar discord
importar os
importar dotenv
importar youtube_dl
importar discord.ext.comandos como comandos

dotenv.carregar_dotenv()

ytdl_format_options = {
    'format': 'bestaudio/best',
    'outtmpl': '%(extractor)s-%(id)s-%(title)s.%(ext)s',
    'restrictfilenames': True,
    'noplaylist': True,
    'nocheckcertificate': True,
    'ignoreerrors': False,
    'logtostderr': False,
    'quiet': True,
    'no_warnings': True,
    'default_search': 'auto',
    'source_address': '0.0.0.0'  # ipv6 addresses cause issues sometimes
}

ffmpeg_options = {
    'options': '-vn'
}

ytdl = youtube_dl.YoutubeDL(ytdl_format_options)

classe YTDLSource(discord.PCMVolumeTransformer):
    def __init__(self, source, *, data, volume=0.5):
        super().__init__(source, volume)

        self.data = data

        self.title = data.get('title')
        self.url = data.get('url')

    @classmethod
    async def from_url(cls, url, *, loop=None, stream=False):
        loop = loop or asyncio.get_event_loop()
        data = await loop.run_in_executor(None, lambda: ytdl.extract_info(url, download=not stream))

        if 'entries' in data:
            # take first item from a playlist
            data = data['entries'][0]

        filename = data['url'] if stream else ytdl.prepare_filename(data)
        retornar cls(discord.FFmpegPCMAudio(filename, **ffmpeg_options), data=data)

classe Music(comandos.Cog):
    def __init__(self, bot):
        self.bot = bot

    @comandos.comando()
    async def entrar(self, ctx):
        if not ctx.voice_client:
            await ctx.author.voice.channel.entrar()

    @comandos.comando()
    async def sair(self, ctx):
        if ctx.voice_client:
            await ctx.voice_client.sair()

    @comandos.comando()
    async def jogar(self, ctx, *, url):
        async with ctx.typing():
            player = await YTDLSource.from_url(url, loop=self.bot.loop)
            ctx.voice_client.play(player, after=lambda x: imprimir(f'Erro no player: {x}') if x else None)

        await ctx.enviar(f'Agora jogando: {player.title}')

    @comandos.comando()
    async def pausar(self, ctx):
        if ctx.voice_client:
            ctx.voice_client.pausar()

    @comandos.comando()
    async def continuarr(self, ctx):
        if ctx.voice_client:
            ctx.voice_client.resume()

    @comandos.comando()
    async def parar(self, ctx):
        if ctx.voice_client:
            ctx.voice_client.parar()

bot = comandos.Bot(comando_prefixo='!')

@bot.event
async def ao_pronto():
    imprimir(f'Bot conectado como {bot.user}!')

bot.carregar_extens√£o('music')
bot.iniciar(os.getenv('DISCORD_TOKEN'))
